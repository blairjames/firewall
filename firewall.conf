#!/usr/bin/env bash

# Flush all iptables
function flush() {
  iptables -F
}

# Set Default Action of Tables
function set_defaults() {
  iptables -P INPUT DROP
  iptables -P OUTPUT ACCEPT
  iptables -P FORWARD ACCEPT
}

# Allow local interfaces
function allow_loopback() {
  iptables -A INPUT -i lo -j LOG --log-prefix "[IPTABLES:ACCEPT]-Loopback " --log-level 7
  iptables -A INPUT -i lo -j ACCEPT 
}

# Allow already established connections
# Generates excessive Logs
function allow_established() {
  #iptables -A INPUT -m conntrack --ctstate ESTABLISHED,RELATED -j LOG --log-prefix "[IPTABLES:ACCEPT]-Established: " --log-level 7
  iptables -A INPUT -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT
}
 
# Read values from the "allowed_tcp" file and create rules to reflect 
function allow_tcp_rules() {
  allow_tcp="/opt/firewall/allowed_tcp"
  while IFS= read -r line
    do
      if [[ ! $line = \#* ]] ; then
        src=$(echo $line | cut -d ' ' -f 1)
        dst=$(echo $line | cut -d ' ' -f 2)
        port=$(echo $line | cut -d ' ' -f 3)        
        iptables -A INPUT -p tcp -s $src -d $dst -m multiport --dports $port -j LOG --log-prefix "[IPTABLES:ACCEPT]-Allowed_TCP " --log-level 7
        iptables -A INPUT -p tcp -s $src -d $dst -m multiport --dports $port -j ACCEPT
      fi
    done < $allow_tcp
}

# Read values from the "allowed_udp" file and create rules to reflect 
function allow_udp_rules() {
  allow_udp="/opt/firewall/allowed_udp"
  while IFS= read -r line
    do
      if [[ ! $line = \#* ]] ; then
        src=$(echo $line | cut -d ' ' -f 1)
        dst=$(echo $line | cut -d ' ' -f 2)
        port=$(echo $line | cut -d ' ' -f 3)  
        iptables -A INPUT -p udp -s $src -d $dst -m multiport --dports $port -j LOG --log-prefix "[IPTABLES:ACCEPT]-Allowed_UDP " --log-level 7
        iptables -A INPUT -p udp -s $src -d $dst -m multiport --dports $port -j ACCEPT
      fi
    done < $allow_udp
}

# Block excessive traffic based on hitcount over time
function block_hitcount() {
  iptables -A INPUT -m conntrack --ctstate NEW -m recent --set
  iptables -A INPUT -m conntrack --ctstate NEW -m recent --update --seconds 5 --hitcount 20 -j LOG --log-prefix "[iptables-DROP]-Hitcount " --log-level debug   
  iptables -A INPUT -m conntrack --ctstate NEW -m recent --update --seconds 5 --hitcount 20 -j DROP
}

# Log OUTPUT and FORWARD Tables
function log_tables() {
  #iptables -A OUTPUT  -j LOG --log-prefix "[IPTABLES:ACCEPT]-OUTPUT " --log-level 7
  iptables -A FORWARD -j LOG --log-prefix "[IPTABLES:ACCEPT]-FORWARD " --log-level 7
}

# Final DROP All
function final_drop() {
  iptables -A INPUT -j LOG --log-prefix "[IPTABLES: DROP]-Final " --log-level 7
  iptables -A INPUT -j DROP
}

# Main
function main() {
  flush
  set_defaults
  allow_established
  allow_loopback
  allow_tcp_rules
  allow_udp_rules
  block_hitcount
  log_tables
  final_drop
}

main
